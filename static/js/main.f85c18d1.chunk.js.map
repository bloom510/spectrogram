{"version":3,"sources":["components/Canvas/getSize.js","components/Canvas/Canvas.jsx","components/Spectrogram/element.jsx","components/FileUploader/Uploader.jsx","components/FileDownloader/Downloader.jsx","components/PlaybackCtrl/PlaybackCtrl.jsx","components/FileList/FileList.jsx","components/GridSystem/index.js","components/GridSystem/Grid.jsx","components/GridSystem/GridItem.jsx","AudioStream/index.js","App.js","index.js"],"names":["parseNumber","prop","parseFloat","getSize","el","window","document","body","innerWidth","innerHeight","temporary","parentNode","appendChild","rect","getBoundingClientRect","styles","getComputedStyle","height","getPropertyValue","width","removeChild","ResponsiveCanvas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResize","_assertThisInitialize","assertThisInitialized","_this$state","ctx","canvas","state","setState","objectSpread","setSize","props","canvasApp","parent","parentElement","_getSize","_getSize2","slicedToArray","setRef","createRef","canvasRef","_this2","addEventListener","getContext","_this2$state","init","removeEventListener","scale","devicePixelRatio","_this$state2","react_default","a","createElement","ref","style","border","Component","Canvas","Canvas_ResponsiveCanvas","_this3","Spectrogram","nextProps","streamData","fillStyle","fillRect","slice","getImageData","draw","cancelAnimationFrame","animationLoop","x","y","imageData","scaled","createImageData","row","col","sourcePixel","data","destRow","destCol","i","arguments","length","undefined","requestAnimationFrame","sliceData","putImageData","scaleImageData","Canvas_Canvas","transform","Uploader","handleUpload","reader","loading","Audio","file","files","readAsDataURL","src","onloadend","result","onUploadSuccess","name","FileReader","Fragment","tooltip","title","es_button","size","shape","icon","onClick","click","accept","type","display","onChange","Downloader","assign","PlaybackCtrl","isPlaying","handlePlayback","FileList","handleSelect","selectedFile","dataSource","list","header","justifyContent","Uploader_Uploader","PlaybackCtrl_PlaybackCtrl","disabled","Downloader_Downloader","spin","textAlign","marginTop","bordered","renderItem","Item","block","margin","Meta","avatar","GridSystem","GridStyles","gridTemplateColumns","concat","cols","gridTemplateRows","rows","className","React","Children","map","children","id","cloneElement","GridItemStyles","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","AudioStream","play","bind","getStreamData","actx","console","log","AudioContext","webkitAudioContext","e","checkContext","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","source","createMediaElementSource","fftSize","minDecibels","maxDecibels","connect","destination","push","index","getByteFrequencyData","pause","currentTime","Grid","GridItem","App","stop","handleStreamData","incoming","fromFile","analyserLoop","App_Grid","App_GridItem","element_Spectrogram","FileList_FileList","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.f85c18d1.chunk.js","sourcesContent":["const parseNumber = prop => parseFloat(prop) || 0;\n\nconst getSize = (el) => {\n  if (el === window || el === document.body) {\n    return [window.innerWidth, window.innerHeight];\n  }\n\n  let temporary = false;\n\n  if (!el.parentNode && document.body) {\n    temporary = true;\n    document.body.appendChild(el);\n  }\n\n  const rect = el.getBoundingClientRect();\n  const styles = getComputedStyle(el);\n  const height =\n    (rect.height | 0) +\n    parseNumber(styles.getPropertyValue('margin-top')) +\n    parseNumber(styles.getPropertyValue('margin-bottom'));\n  const width =\n    (rect.width | 0) +\n    parseNumber(styles.getPropertyValue('margin-left')) +\n    parseNumber(styles.getPropertyValue('margin-right'));\n\n  if (temporary && document.body) {\n    document.body.removeChild(el);\n  }\n\n  return [width, height];\n};\n\nexport default getSize;","import React, { Component } from 'react';\nimport getSize from './getSize';\n\nclass ResponsiveCanvas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            width: 0,\n            height: 0\n        };\n    }\n    componentDidMount() {\n        this.setState({ ...this.setSize() }, () => {\n            window.addEventListener('resize', this.handleResize, false);\n            this.ctx = this.canvas.getContext('2d');\n            const { ctx, canvas } = this;\n            const { width, height } = this.state;\n            this.props.canvasApp.init(ctx, canvas, width, height);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize, false);\n    }\n    handleResize = () => {\n        const { ctx, canvas } = this;\n        const { width, height } = this.state;\n        this.setState({ ...this.setSize() }, () => {\n            this.props.canvasApp.setSize(width, height)\n            // Add custom events with this.props.onResize();\n        });\n    }\n    setSize = () => {\n        const parent = this.canvas.parentElement;\n        if (!parent) return;\n        const [width, height] = getSize(parent);\n        return { width, height };\n    }\n    setRef = (el) => {\n        if (!el) return\n        const { createRef } = this.props;\n        this.canvas = el;\n        if (typeof canvasRef === 'function') {\n            createRef(el);\n        }\n    };\n    render() {\n        const scale = window.devicePixelRatio || 1;\n        const { width, height } = this.state;\n        return (\n            <canvas\n                ref={this.setRef}\n                width={width * scale}\n                height={height * scale}\n                style={{ width, height, ...this.props.style, border: '1px solid' }}\n            />\n        )\n    }\n}\n\nconst Canvas = (props) => {\n    return (\n        <ResponsiveCanvas\n            style={{ ...props.style, }}\n            canvasRef={el => { this.canvas = el }}\n            canvasApp={props.canvasApp}\n        />\n    )\n}\n\n\nexport { Canvas };","import React, { Component } from 'react';\nimport { Canvas } from '../Canvas';\n// import { Spectrogram as Sonogram } from './app';\n\n\n\nclass Spectrogram extends Component {\n    constructor() {\n        super();\n    }\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.streamData) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    init(ctx, canvas, width, height) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw();\n    }\n    setSize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n        cancelAnimationFrame(this.animationLoop);\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);      \n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw(this.x, this.y);\n    }\n    scaleImageData(imageData, scale) {\n        var scaled = this.ctx.createImageData(imageData.width * scale, imageData.height * scale);\n        for (var row = 0; row < imageData.height; row++) {\n            for (var col = 0; col < imageData.width; col++) {\n                var sourcePixel = [\n                    imageData.data[(row * imageData.width + col) * 4 + 0],\n                    imageData.data[(row * imageData.width + col) * 4 + 1],\n                    imageData.data[(row * imageData.width + col) * 4 + 2],\n                    imageData.data[(row * imageData.width + col) * 4 + 3]\n                ];\n                for (var y = 0; y < scale; y++) {\n                    var destRow = row * scale + y;\n                    for (var x = 0; x < scale; x++) {\n                        var destCol = col * scale + x;\n                        for (var i = 0; i < 4; i++) {\n                            scaled.data[(destRow * scaled.width + destCol) * 4 + i] =\n                                sourcePixel[i];\n                        }\n                    }\n                }\n            }\n        }\n\n        return scaled;\n    }\n    draw(x = 0, y = 0) {\n        const { ctx, props, canvas, slice } = this;\n        const { width, height } = canvas;\n        const { streamData } = props;\n        this.animationLoop = requestAnimationFrame(() => {\n            if (x > width) x = 0;\n            this.x = x;\n            this.y = y;\n            x = x + 1;\n            this.draw(x, y);\n        });\n        let sliceData = slice.data;\n        for (let i = 0; i < sliceData.length; i += 4) {\n            if (streamData) {\n                // Main\n                sliceData[i] = streamData[i]\n                sliceData[i + 1] = streamData[i + 1]\n                sliceData[i + 2] = streamData[i + 2]\n\n            } else {\n                // Standby\n                sliceData[i] = 0;\n                sliceData[i + 1] = 0;\n                sliceData[i + 2] = 0;\n            }\n        }\n        ctx.putImageData(this.scaleImageData(slice, 2), x, y, 0, 0, canvas.width, canvas.height);\n    }\n    render() {\n        return (\n            <Canvas style={{ transform: 'rotate(180deg) scaleX(-1)' }} canvasRef={el => { this.canvas = el }} canvasApp={this} />\n        )\n    }\n}\n\n\n\n\nexport { Spectrogram };","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\n\nclass Uploader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    }\n    this.reader = new FileReader();\n  }\n  handleUpload = () => {\n    const { props, reader } = this;\n    this.setState({ loading: true });\n    const el = new Audio();\n    const file = this.el.files[0];\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      el.src = \"\";\n    }\n    reader.onloadend = () => {\n      el.src = reader.result;\n      props.onUploadSuccess({ name: file.name, el });\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { state } = this;\n    return (\n      <React.Fragment>\n        <Tooltip title='upload audio'>\n          <Button\n            size='small'\n            shape='circle'\n            icon='upload'\n            loading={state.loading}\n            onClick={() => this.el.click()}\n          />\n        </Tooltip>\n        <input\n          accept='audio/*'\n          ref={el => this.el = el} type=\"file\" style={{ display: 'none' }}\n          onChange={() => this.handleUpload()}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport { Uploader }","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const Downloader = (props) => {\n    return (\n        <Tooltip title='download image'>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon='download'\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const PlaybackCtrl = (props) => {\n    return (\n        <Tooltip title={props.isPlaying ? 'pause' : 'play'}>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon={props.isPlaying ? 'pause-circle' : 'play-circle'}\n                onClick={props.handlePlayback}\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Uploader, Downloader, PlaybackCtrl } from '../';\nimport { List, Button, Icon } from 'antd';\nimport { Spin } from 'antd';\n\nexport const FileList = (props) => {\n    const {\n        onUploadSuccess,\n        handleSelect,\n        handlePlayback,\n        isPlaying,\n        selectedFile,\n        dataSource\n    } = props;\n    return (\n        <List\n            style={props.style}\n            header={\n                <div>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                        <Uploader onUploadSuccess={onUploadSuccess} />\n                        <PlaybackCtrl\n                            disabled={!selectedFile}\n                            handlePlayback={handlePlayback}\n                            isPlaying={isPlaying}\n                        />\n                        <Downloader />\n                        { props.loading ? <Spin /> : null }\n                    </div>\n                    {selectedFile ? <div style={{ textAlign: 'center', marginTop: '2%' }}><Icon type='sound' /> {selectedFile.name}</div> : null}\n                </div>\n            }\n            bordered\n            dataSource={dataSource}\n            renderItem={file => (\n                <List.Item>\n                    <Button\n                        block\n                        style={{ margin: '0 auto' }}\n                        onClick={() => handleSelect(file)}>\n                        <List.Item.Meta\n                            avatar={<img width={25} height={25} src=\"https://www.svgrepo.com/show/8210/musical-notes.svg\" />}\n                            title={file.name}\n                        />\n                    </Button>\n                </List.Item>\n            )}\n        />\n    )\n}","import { Grid } from './Grid';\nimport { GridItem } from './GridItem';\nexport const GridSystem = { Grid, GridItem };","import React from 'react';\n\nexport const Grid = (props) => {\n    const GridStyles = {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${props.cols}, 1fr)`,\n        gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n        ...props.style,\n        // gridRowGap: props.gridRowGap,\n        // gridColumnGap: props.gridColGap,\n    }\n    const { rows, cols } = props;\n    return (\n        <div className='grid' style={GridStyles}>\n            {\n                React.Children.map(props.children, (row, id) => React.cloneElement(row, { id: id + 1, rows: rows + 1, cols: cols + 1 }))\n            }\n        </div>\n    );\n}","import React from 'react';\n\nexport const GridItem = (props) => {\n    const GridItemStyles = {\n        ...props.rowStart ? { gridRowStart: props.rowStart } : { gridRowStart: props.id },\n        ...props.rowEnd ? { gridRowEnd: props.rowEnd + 1 } : null,\n        ...props.colStart ? { gridColumnStart: props.colStart } : { gridColumnStart: 1 },\n        ...props.colEnd ? { gridColumnEnd: props.colEnd + 1 } : { gridColumnEnd: props.cols },\n        ...props.style\n    }\n    return (\n        <div style={GridItemStyles}>\n            {props.children}\n        </div>\n    );\n}","/* AUDIOSTREAM\n*  API for audio playback and analysis.\n*/\n\nclass AudioStream {\n    constructor() {\n        this.files = [];\n        this.play = this.play.bind(this);\n        this.getStreamData = this.getStreamData.bind(this)\n    }\n    checkContext() {\n        if (!this.actx) {\n            try {\n                console.log('New context instantiated')\n                this.actx = new (window.AudioContext || window.webkitAudioContext)();\n            } catch (e) {\n                console.log(`Sorry, but your browser doesn't support the Web Audio API!`, e);\n            }\n        }\n    }\n    fromFile(file) {\n        this.checkContext();\n        const { actx } = this;\n        try {\n            this.analyser = actx.createAnalyser();\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            this.source = actx.createMediaElementSource(file.el);\n            const { analyser, source, dataArray } = this;\n            analyser.fftSize = 16384;\n            analyser.minDecibels = -120;\n            analyser.maxDecibels = -15;\n            analyser.connect(actx.destination);\n            source.connect(this.analyser);\n            this.files.push({ file, analyser, source, dataArray })\n        } catch (e) {\n            console.log('Failed to make stream: ', e);\n        }\n    }\n    play(index) {\n        this.files[index].file.el.play();\n        this.getStreamData(index);\n    }\n    getStreamData(index) {\n        this.files[index].analyser.getByteFrequencyData(this.files[index].dataArray)\n        return this.files[index].dataArray\n    }\n    stop(index) {\n        this.files[index].file.el.pause();\n        this.files[index].file.el.currentTime = 0;\n    }\n}\n\nexport { AudioStream }","/* APP\n*  The main page.\n*/\nimport React, { Component } from 'react';\nimport { Spectrogram, FileList, GridSystem } from './components';\nimport { AudioStream } from './AudioStream';\nconst { Grid, GridItem } = GridSystem;\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n      isPlaying: false\n    }\n    this.AudioStream = new AudioStream();\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.onUploadSuccess = this.onUploadSuccess.bind(this);\n    this.handlePlayback = this.handlePlayback.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleStreamData = this.handleStreamData.bind(this);\n  }\n  onUploadSuccess(file) {\n    let incoming = { ...file, index: this.state.files.length };\n    let files = this.state.files.concat({ ...incoming });\n    let selectedFile = this.state.selectedFile ? this.state.selectedFile : incoming;\n    this.setState({ files, selectedFile  }, () => this.AudioStream.fromFile(file));\n  }\n  play() {\n    const { AudioStream, handleStreamData, state: { selectedFile } } = this;\n    handleStreamData(selectedFile.index);\n    AudioStream.play(selectedFile.index)\n  }\n  stop() {\n    const { AudioStream, state: { selectedFile }, analyserLoop } = this;\n    cancelAnimationFrame(analyserLoop);\n    AudioStream.stop(selectedFile.index);\n    this.setState({ streamData: [] })\n  }\n  handlePlayback() {\n    const { play, stop, state: { isPlaying } } = this;\n    this.setState({ isPlaying: !isPlaying }, () => {\n      if (isPlaying) {\n        stop();\n      } else {\n        play();\n      }\n    });\n  }\n  handleStreamData(index) {\n    const { AudioStream, handleStreamData } = this;\n    this.setState({ streamData: AudioStream.getStreamData(index) });\n    this.analyserLoop = requestAnimationFrame(() => handleStreamData(index));\n  }\n  handleSelect(file) {\n    this.setState({ selectedFile: file });\n  }\n  render() {\n    return (\n      <Grid cols={8} rows={2}>\n        <GridItem style={{ height: '50vh' }}>\n          <Spectrogram streamData={this.state.streamData} isPlaying={this.state.isPlaying} />\n        </GridItem>\n        <GridItem style={{ height: '50vh' }}>\n          <FileList\n            selectedFile={this.state.selectedFile}\n            onUploadSuccess={this.onUploadSuccess}\n            handlePlayback={this.handlePlayback}\n            handleSelect={this.handleSelect}\n            isPlaying={this.state.isPlaying}\n            dataSource={this.state.files}\n          />\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}