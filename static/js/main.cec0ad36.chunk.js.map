{"version":3,"sources":["components/Canvas/getSize.js","components/Canvas/Canvas.jsx","components/Spectrogram/element.jsx","components/FileUploader/Uploader.jsx","components/FileDownloader/Downloader.jsx","components/PlaybackCtrl/PlaybackCtrl.jsx","components/FileList/FileList.jsx","components/GridSystem/index.js","components/GridSystem/Grid.jsx","components/GridSystem/GridItem.jsx","components/Recorder/Recorder.jsx","AudioStream/index.js","App.js","index.js"],"names":["parseNumber","prop","parseFloat","getSize","el","window","document","body","innerWidth","innerHeight","temporary","parentNode","appendChild","rect","getBoundingClientRect","styles","getComputedStyle","height","getPropertyValue","width","removeChild","ResponsiveCanvas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResize","_assertThisInitialize","assertThisInitialized","_this$state","ctx","canvas","state","setState","objectSpread","setSize","props","canvasApp","parent","parentElement","_getSize","_getSize2","slicedToArray","setRef","createRef","canvasRef","_this2","addEventListener","getContext","_this2$state","init","removeEventListener","scale","devicePixelRatio","_this$state2","react_default","a","createElement","ref","style","Component","Canvas","Canvas_ResponsiveCanvas","Canvas_this3","isPlaying","Spectrogram","fillStyle","fillRect","slice","getImageData","draw","console","log","cancelAnimationFrame","animationLoop","x","arguments","length","undefined","y","_this$canvas","_this$props","streamData","mic","requestAnimationFrame","sliceData","data","i","putImageData","imageData","scaled","createImageData","row","col","sourcePixel","destRow","destCol","Canvas_Canvas","transform","Uploader","handleUpload","reader","loading","Audio","file","files","readAsDataURL","src","onloadend","result","onUploadSuccess","name","FileReader","Fragment","tooltip","title","es_button","size","shape","icon","onClick","click","accept","type","display","onChange","Downloader","assign","handleDownload","PlaybackCtrl","handlePlayback","FileList","handleSelect","handleCapture","selectedFile","dataSource","list","header","justifyContent","Uploader_Uploader","Downloader_Downloader","PlaybackCtrl_PlaybackCtrl","disabled","Recorder_Recorder","textAlign","bordered","renderItem","Item","block","Meta","avatar","source","href","target","author","GridSystem","GridStyles","gridTemplateColumns","concat","cols","gridTemplateRows","rows","gridRowGap","gridColumnGap","className","React","Children","map","children","id","cloneElement","GridItemStyles","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","Recorder","index_esm","AudioStream","microphone","play","bind","getStreamData","actx","audioWorklet","addModule","process","bypassNode","AudioWorkletNode","AudioContext","webkitAudioContext","loadModule","_context2","t0","checkContext","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","createMediaElementSource","fftSize","minDecibels","maxDecibels","connect","destination","push","e","navigator","getUserMedia","audio","stream","createMediaStreamSource","recorder","MediaRecorder","getAudioTracks","forEach","track","index","resume","pause","currentTime","getByteFrequencyData","Grid","GridItem","social","path","App","stop","handleStreamData","loadSamples","getElementsByTagName","link","download","Date","now","toDataURL","fromFile","_this3","incoming","_this4","fromMic","analyserLoop","stopMic","App_Grid","App_GridItem","margin","marginTop","padding","placement","open","backgroundColor","element_Spectrogram","FileList_FileList","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.cec0ad36.chunk.js","sourcesContent":["const parseNumber = prop => parseFloat(prop) || 0;\n\nconst getSize = (el) => {\n  if (el === window || el === document.body) {\n    return [window.innerWidth, window.innerHeight];\n  }\n\n  let temporary = false;\n\n  if (!el.parentNode && document.body) {\n    temporary = true;\n    document.body.appendChild(el);\n  }\n\n  const rect = el.getBoundingClientRect();\n  const styles = getComputedStyle(el);\n  const height =\n    (rect.height | 0) +\n    parseNumber(styles.getPropertyValue('margin-top')) +\n    parseNumber(styles.getPropertyValue('margin-bottom'));\n  const width =\n    (rect.width | 0) +\n    parseNumber(styles.getPropertyValue('margin-left')) +\n    parseNumber(styles.getPropertyValue('margin-right'));\n\n  if (temporary && document.body) {\n    document.body.removeChild(el);\n  }\n\n  return [width, height];\n};\n\nexport default getSize;","import React, { Component } from 'react';\nimport getSize from './getSize';\n\nclass ResponsiveCanvas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            width: 0,\n            height: 0\n        };\n    }\n    componentDidMount() {\n        this.setState({ ...this.setSize() }, () => {\n            window.addEventListener('resize', this.handleResize, false);\n            this.ctx = this.canvas.getContext('2d');\n            const { ctx, canvas } = this;\n            const { width, height } = this.state;\n            this.props.canvasApp.init(ctx, canvas, width, height);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize, false);\n    }\n    handleResize = () => {\n        const { ctx, canvas } = this;\n        const { width, height } = this.state;\n        this.setState({ ...this.setSize() }, () => {\n            this.props.canvasApp.setSize(width, height)\n            // Add custom events with this.props.onResize();\n        });\n    }\n    setSize = () => {\n        const parent = this.canvas.parentElement;\n        if (!parent) return;\n        const [width, height] = getSize(parent);\n        return { width, height };\n    }\n    setRef = (el) => {\n        if (!el) return\n        const { createRef } = this.props;\n        this.canvas = el;\n        if (typeof canvasRef === 'function') {\n            createRef(el);\n        }\n    };\n    render() {\n        const scale = window.devicePixelRatio || 1;\n        const { width, height } = this.state;\n        return (\n            <canvas\n                ref={this.setRef}\n                width={width * scale}\n                height={height * scale}\n                style={{ width, height, ...this.props.style,  }}\n            />\n        )\n    }\n}\n\nconst Canvas = (props) => {\n    return (\n        <ResponsiveCanvas\n            style={{ ...props.style, }}\n            canvasRef={el => { this.canvas = el }}\n            canvasApp={props.canvasApp}\n            isPlaying={props.isPlaying}\n        />\n    )\n}\n\n\nexport { Canvas };","import React, { Component } from 'react';\nimport { Canvas } from '../Canvas';\nclass Spectrogram extends Component {\n    constructor() {\n        super();\n    }\n    init(ctx, canvas, width, height) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw()\n    }\n    setSize(width, height) {\n        console.log('resizing', width, height)\n        this.canvas.width = width;\n        this.canvas.height = height;\n        cancelAnimationFrame(this.animationLoop);\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw();\n    }\n    draw(x = 0, y = 0) {\n        const { slice, ctx, canvas: { width, height }, props: { streamData, isPlaying, mic } } = this;\n        this.animationLoop = requestAnimationFrame(() => {\n            if (x > width) x = 0;\n            this.draw(x, y);\n        });\n        let sliceData = slice.data;\n        for (let i = 0; i < sliceData.length; i += 4) {\n            if (streamData) {\n                // Main\n                sliceData[i] = streamData[i]\n                sliceData[i + 1] = streamData[i + 1]\n                sliceData[i + 2] = streamData[i + 2]\n\n            } else {\n                // Standby\n                sliceData[i] = 0;\n                sliceData[i + 1] = 0;\n                sliceData[i + 2] = 0;\n            }\n        }\n        isPlaying || mic ? x++ : x = 0;\n        ctx.putImageData(slice, x, y);\n    }\n    scaleImageData(imageData, scale) {\n        let scaled = this.ctx.createImageData(imageData.width * scale, imageData.height * scale);\n        for (let row = 0; row < imageData.height; row++) {\n            for (let col = 0; col < imageData.width; col++) {\n                let sourcePixel = [\n                    imageData.data[(row * imageData.width + col) * 4 + 0],\n                    imageData.data[(row * imageData.width + col) * 4 + 1],\n                    imageData.data[(row * imageData.width + col) * 4 + 2],\n                    imageData.data[(row * imageData.width + col) * 4 + 3]\n                ];\n                for (let y = 0; y < scale; y++) {\n                    let destRow = row * scale + y;\n                    for (let x = 0; x < scale; x++) {\n                        let destCol = col * scale + x;\n                        for (let i = 0; i < 4; i++) {\n                            scaled.data[(destRow * scaled.width + destCol) * 4 + i] =\n                                sourcePixel[i];\n                        }\n                    }\n                }\n            }\n        }\n        return scaled;\n    }\n    render() {\n        return (\n            <Canvas style={{ transform: 'rotate(180deg) scaleX(-1)', ...this.props.style }} canvasRef={el => { this.canvas = el }} canvasApp={this} isPlaying={this.props.isPlaying} />\n        )\n    }\n}\n\n\n\n\nexport { Spectrogram };","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\n\nclass Uploader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    }\n    this.reader = new FileReader();\n  }\n  handleUpload = () => {\n    const { props, reader } = this;\n    this.setState({ loading: true });\n    const el = new Audio();\n    const file = this.el.files[0];\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      el.src = \"\";\n    }\n    reader.onloadend = () => {\n      el.src = reader.result;\n      props.onUploadSuccess({ name: file.name, el });\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { state } = this;\n    return (\n      <React.Fragment>\n        <Tooltip title='upload audio'>\n          <Button\n            size='small'\n            shape='circle'\n            icon='upload'\n            loading={state.loading}\n            onClick={() => this.el.click()}\n          />\n        </Tooltip>\n        <input\n          accept='audio/*'\n          ref={el => this.el = el} type=\"file\" style={{ display: 'none' }}\n          onChange={() => this.handleUpload()}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport { Uploader }","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const Downloader = (props) => {\n    return (\n        <Tooltip title='download image'>\n            <Button\n                {...props}\n                onClick={props.handleDownload}\n                size='small'\n                shape='circle'\n                icon='download'\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const PlaybackCtrl = (props) => {\n    return (\n        <Tooltip title={props.isPlaying ? 'pause' : 'play'}>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon={props.isPlaying ? 'pause-circle' : 'play-circle'}\n                onClick={props.handlePlayback}\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Uploader, Downloader, PlaybackCtrl, Recorder } from '../';\nimport { List, Button, Icon } from 'antd';\nexport const FileList = (props) => {\n    const {\n        onUploadSuccess,\n        handleSelect,\n        handlePlayback,\n        handleCapture,\n        isPlaying,\n        selectedFile,\n        dataSource,\n        mic,\n        handleDownload\n    } = props;\n    return (\n        <List\n            style={props.style}\n            header={\n                <div>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly', }}>\n                        <Uploader onUploadSuccess={onUploadSuccess} />\n                        <Downloader handleDownload={handleDownload} />\n                        <PlaybackCtrl\n                            disabled={!selectedFile || mic}\n                            handlePlayback={handlePlayback}\n                            isPlaying={isPlaying}\n                        />\n                        <Recorder mic={mic} isPlaying={isPlaying} handleCapture={handleCapture} />\n                        {selectedFile ? <span style={{ textAlign: 'center' }}><Icon type='sound' /> {mic ? 'Microphone' : selectedFile.name}</span> : null}\n                    </div>\n                </div>\n            }\n            bordered\n            dataSource={dataSource}\n            renderItem={file => (\n                <List.Item>\n                    <Button\n                        disabled={mic}\n                        block\n                        // style={{ margin: '0 auto' }}\n                        onClick={() => handleSelect(file)}>\n                        <List.Item.Meta\n                            avatar={<img width={25} height={25} src=\"https://www.svgrepo.com/show/8210/musical-notes.svg\" />}\n                            title={\n                                <span>\n                                    {\n                                        file.source ?\n                                            <span>\n                                                <a href={file.source} target='_blank'>{file.name}</a> by {file.author.name}\n                                                by {file.name}\n                                            </span>\n                                            : file.name\n                                    }\n                                </span>\n                            }\n                        />\n                    </Button>\n                </List.Item>\n            )}\n        />\n    )\n}","import { Grid } from './Grid';\nimport { GridItem } from './GridItem';\nexport const GridSystem = { Grid, GridItem };","import React from 'react';\n\nexport const Grid = (props) => {\n    const GridStyles = {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${props.cols}, 1fr)`,\n        gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n        ...props.style,\n        gridRowGap: 0,\n        gridColumnGap: 0,\n    }\n    const { rows, cols } = props;\n    return (\n        <div className='grid' style={GridStyles}>\n            {\n                React.Children.map(props.children, (row, id) => React.cloneElement(row, { id: id + 1, rows: rows + 1, cols: cols + 1 }))\n            }\n        </div>\n    );\n}","import React from 'react';\n\nexport const GridItem = (props) => {\n    const GridItemStyles = {\n        ...props.rowStart ? { gridRowStart: props.rowStart } : { gridRowStart: props.id },\n        ...props.rowEnd ? { gridRowEnd: props.rowEnd + 1 } : null,\n        ...props.colStart ? { gridColumnStart: props.colStart } : { gridColumnStart: 1 },\n        ...props.colEnd ? { gridColumnEnd: props.colEnd + 1 } : { gridColumnEnd: props.cols },\n        ...props.style\n    }\n    return (\n        <div style={GridItemStyles}>\n            {props.children}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { MdMicOff } from \"react-icons/md\";\n\nclass Recorder extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        const { props } = this;\n        return (\n            <React.Fragment>\n                <Tooltip title={props.mic ? 'mute mic' : 'connect mic'}>\n                    <Button\n                        disabled={props.isPlaying}\n                        style={{ display: 'flex', justifyContent: 'space-evenly', }}\n                        onClick={props.handleCapture}\n                        size='small'\n                        shape='circle'\n                        icon={!props.mic ? 'audio' : null}\n                    >{props.mic ? <MdMicOff /> : null}</Button>\n                </Tooltip>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { Recorder }","/* AUDIOSTREAM\n*  API for audio playback and analysis.\n*/\n\nclass AudioStream {\n    constructor() {\n        this.microphone = {};\n        this.files = [];\n        this.play = this.play.bind(this);\n        this.getStreamData = this.getStreamData.bind(this)\n    }\n    async loadModule() {\n        const { actx } = this;\n        try {\n            await actx.audioWorklet.addModule(`${process.env.PUBLIC_URL}/worklet/bypass-processor.js`);\n            this.bypassNode = new AudioWorkletNode(actx, 'bypass-processor');\n            console.log(`loaded module `);\n            return true;\n        } catch (e) {\n            console.log(`Failed to load module`);\n            return false;\n        }\n    }\n    async checkContext() {\n        if (!this.actx) {\n            try {\n                console.log('New context instantiated')\n                this.actx = new (window.AudioContext || window.webkitAudioContext)();\n                await this.loadModule();\n            } catch (e) {\n                console.log(`Sorry, but your browser doesn't support the Web Audio API!`, e);\n            }\n        }\n    }\n    fromFile(file) {\n        this.checkContext();\n        const { actx } = this;\n        try {\n            this.analyser = actx.createAnalyser();\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            this.source = actx.createMediaElementSource(file.el);\n            const { analyser, source, dataArray } = this;\n            analyser.fftSize = 2048;\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -15;\n            analyser.connect(actx.destination);\n            source.connect(this.analyser);\n            this.files.push({ file, analyser, source, dataArray })\n        } catch (e) {\n            console.log('Failed to make stream: ', e);\n        }\n    }\n    fromMic() {\n        this.checkContext();\n        const { actx, bypassNode } = this;\n        this.microphone.analyser = actx.createAnalyser();\n        const { analyser } = this.microphone;\n        analyser.fftSize = 4096;\n        analyser.minDecibels = -120;\n        analyser.maxDecibels = -15;\n        this.microphone.dataArray = new Uint8Array(analyser.frequencyBinCount);\n        navigator.getUserMedia({ audio: true }, (stream) => {\n            this.microphone.source = actx.createMediaStreamSource(stream);\n            this.microphone.recorder = new MediaRecorder(stream);\n            this.microphone.source.connect(analyser)\n                .connect(bypassNode)\n                .connect(actx.destination);\n        }, (e) => console.log(e));\n    }\n    stopMic() {\n        this.microphone\n            .recorder\n            .stream\n            .getAudioTracks().forEach((track) => console.log(track));\n    }\n    play(index) {\n        this.actx.resume();\n        this.files[index].file.el.play();\n        this.getStreamData(index);\n    }\n    stop(index) {\n        this.files[index].file.el.pause();\n        this.files[index].file.el.currentTime = 0;\n    }\n    getStreamData(index) {\n        if (index === 'mic') {\n            this.actx.resume();\n            this.microphone.analyser.getByteFrequencyData(this.microphone.dataArray)\n            return this.microphone.dataArray;\n        } else {\n            this.files[index].analyser.getByteFrequencyData(this.files[index].dataArray)\n            return this.files[index].dataArray;\n        }\n    }\n}\n\nexport { AudioStream }","/* APP\n*  The main page.\n*/\nimport React, { Component } from 'react';\nimport { Icon, Tooltip } from 'antd';\nimport { MdEmail } from 'react-icons/md'\nimport { Spectrogram, FileList, GridSystem } from './components';\nimport { AudioStream } from './AudioStream';\nconst { Grid, GridItem } = GridSystem;\nlet data = [\n  {\n    name: 'Animation study',\n    author: {\n      name: 'Orsolya Kaufmann',\n      social: ''\n    },\n    source: 'https://www.youtube.com/watch?v=Hxx6Gqf1Q4w&feature=youtu.be',\n    path: `${process.env.PUBLIC_URL}/data/animations.mp3`,\n  },\n  {\n    name: 'Alien transmission',\n    author: {\n      name: 'Spectral Transmissions',\n      social: ''\n    },\n    source: 'https://youtu.be/FnzIpAAzP3w',\n    path: `${process.env.PUBLIC_URL}/data/hidden_transmission.mp3`,\n  },\n  {\n    name: 'rhodes_motif.wav',\n    author: {\n      name: 'natalie',\n      social: ''\n    },\n    source: 'https://youtu.be/FnzIpAAzP3w',\n    path: `${process.env.PUBLIC_URL}/data/rhodes_motif.wav`,\n  },\n  {\n    name: 'rediscovery.wav',\n    author: {\n      name: 'Spectral Transmissions',\n      social: 'natalie'\n    },\n    source: 'https://youtu.be/FnzIpAAzP3w',\n    path: `${process.env.PUBLIC_URL}/data/rediscovery.wav`,\n  },\n\n];\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mic: false,\n      files: [],\n      isPlaying: false,\n    }\n    this.AudioStream = new AudioStream();\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.onUploadSuccess = this.onUploadSuccess.bind(this);\n    this.handlePlayback = this.handlePlayback.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleStreamData = this.handleStreamData.bind(this);\n    this.loadSamples = this.loadSamples.bind(this);\n    this.handleCapture = this.handleCapture.bind(this);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n  componentDidMount() {\n    this.loadSamples();\n  }\n  handleDownload() {\n    let canvas = document.getElementsByTagName('canvas')[0];\n    let link = document.createElement('a');\n    link.download = `spectrogram-${Date.now()}.png`;\n    link.href = canvas.toDataURL()\n    link.click();\n  }\n  loadSamples() {\n    let files = data.map((file, i) => {\n      let audio = new Audio();\n      audio.src = file.path;\n      file.el = audio;\n      file.index = i;\n      this.AudioStream.fromFile(file);\n      return file;\n    });\n    this.setState({ files, selectedFile: files[0] });\n  }\n  onUploadSuccess(file) {\n    let incoming = { ...file, index: this.state.files.length };\n    let files = this.state.files.concat({ ...incoming });\n    let selectedFile = this.state.selectedFile ? this.state.selectedFile : incoming;\n    this.setState({ files, selectedFile }, () => {\n      this.AudioStream.fromFile(file);\n      this.handleSelect(incoming);\n    });\n  }\n  handleSelect(file) {\n    if (this.state.isPlaying) this.stop();\n    this.setState({ selectedFile: file, isPlaying: false });\n  }\n  handlePlayback() {\n    const { play, stop, state: { isPlaying } } = this;\n    this.setState({ isPlaying: !isPlaying }, () => {\n      if (isPlaying) {\n        stop();\n      } else {\n        play();\n      }\n    });\n  }\n  handleCapture() {\n    this.setState({ mic: !this.state.mic }, () => {\n      if (!this.state.mic) {\n        cancelAnimationFrame(this.analyserLoop)\n        this.AudioStream.stopMic();\n      } else {\n        this.AudioStream.fromMic();\n        this.handleStreamData('mic');\n      }\n    });\n  }\n  play() {\n    const { AudioStream, handleStreamData, state: { selectedFile } } = this;\n    handleStreamData(selectedFile.index);\n    AudioStream.play(selectedFile.index)\n  }\n  stop() {\n    const { AudioStream, state: { selectedFile }, analyserLoop } = this;\n    cancelAnimationFrame(analyserLoop);\n    AudioStream.stop(selectedFile.index);\n    this.setState({ streamData: [] })\n  }\n  handleStreamData(index) {\n    const { AudioStream, handleStreamData } = this;\n    this.setState({ streamData: AudioStream.getStreamData(index) });\n    this.analyserLoop = requestAnimationFrame(() => handleStreamData(index));\n  }\n  render() {\n    return (\n      <Grid cols={8} rows={3}>\n        <GridItem style={{ width: '95vw', margin: '0 auto', marginTop: '6vh', padding: '1% 1%' }}>\n          <div style={{ display: 'flex', justifyContent: 'space-evenly', width: '10vw', margin: '0 auto' }}>\n            <Tooltip placement='bottom' title='instagram'>\n              <Icon type='instagram' onClick={() => window.open('https://instagram.com/bloom.510')} />\n            </Tooltip>\n          </div>\n          <div style={{ textAlign: 'center', marginTop: '1%' }}>\n            <p> Hello, world! I'm Natalie, and this is a spectrogram. </p>\n            <p>You can observe spectral content from audio files or your microphone.</p>\n            <p>If you think its really pretty, you have the option to download the canvas. </p>\n            <p>And you could also <a href='mailto:bloom510@protonmail.com' target='_blank'>say hi :-)</a></p>\n            <p>Ready? Scroll down!</p>\n          </div>\n        </GridItem>\n        <GridItem style={{ backgroundColor: 'black' }}>\n          <Spectrogram style={{ height: '170px' }} streamData={this.state.streamData} isPlaying={this.state.isPlaying} mic={this.state.mic} />\n        </GridItem>\n        <GridItem>\n          <FileList\n            handleDownload={this.handleDownload}\n            mic={this.state.mic}\n            selectedFile={this.state.selectedFile}\n            onUploadSuccess={this.onUploadSuccess}\n            handlePlayback={this.handlePlayback}\n            handleSelect={this.handleSelect}\n            handleCapture={this.handleCapture}\n            isPlaying={this.state.isPlaying}\n            dataSource={this.state.files}\n          />\n        </GridItem>\n\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'audioworklet-polyfill';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}