{"version":3,"sources":["components/Canvas/getSize.js","components/Canvas/Canvas.jsx","components/Spectrogram/element.jsx","components/FileUploader/Uploader.jsx","components/FileDownloader/Downloader.jsx","components/PlaybackCtrl/PlaybackCtrl.jsx","components/FileList/FileList.jsx","components/GridSystem/index.js","components/GridSystem/Grid.jsx","components/GridSystem/GridItem.jsx","components/Recorder/Recorder.jsx","AudioStream/index.js","App.js","index.js"],"names":["parseNumber","prop","parseFloat","getSize","el","window","document","body","innerWidth","innerHeight","temporary","parentNode","appendChild","rect","getBoundingClientRect","styles","getComputedStyle","height","getPropertyValue","width","removeChild","ResponsiveCanvas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResize","_assertThisInitialize","assertThisInitialized","_this$state","ctx","canvas","state","setState","objectSpread","setSize","props","canvasApp","parent","parentElement","_getSize","_getSize2","slicedToArray","setRef","createRef","canvasRef","_this2","addEventListener","getContext","_this2$state","init","removeEventListener","scale","devicePixelRatio","_this$state2","react_default","a","createElement","ref","style","border","Component","Canvas","Canvas_ResponsiveCanvas","Canvas_this3","isPlaying","Spectrogram","fillStyle","fillRect","slice","getImageData","draw","console","log","cancelAnimationFrame","animationLoop","x","arguments","length","undefined","y","_this$canvas","_this$props","streamData","mic","requestAnimationFrame","sliceData","data","i","putImageData","imageData","scaled","createImageData","row","col","sourcePixel","destRow","destCol","Canvas_Canvas","transform","Uploader","handleUpload","reader","loading","Audio","file","files","readAsDataURL","src","onloadend","result","onUploadSuccess","name","FileReader","Fragment","tooltip","title","es_button","size","shape","icon","onClick","click","accept","type","display","onChange","Downloader","assign","PlaybackCtrl","handlePlayback","FileList","handleSelect","handleCapture","selectedFile","dataSource","list","header","justifyContent","Uploader_Uploader","Downloader_Downloader","PlaybackCtrl_PlaybackCtrl","disabled","Recorder_Recorder","textAlign","bordered","renderItem","Item","block","margin","Meta","avatar","GridSystem","GridStyles","gridTemplateColumns","concat","cols","gridTemplateRows","rows","className","React","Children","map","children","id","cloneElement","GridItemStyles","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","Recorder","index_esm","AudioStream","microphone","play","bind","getStreamData","actx","audioWorklet","addModule","process","bypassNode","AudioWorkletNode","AudioContext","webkitAudioContext","loadModule","_context2","t0","checkContext","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","source","createMediaElementSource","fftSize","minDecibels","maxDecibels","connect","destination","push","e","navigator","getUserMedia","audio","stream","createMediaStreamSource","recorder","MediaRecorder","getAudioTracks","forEach","track","index","resume","pause","currentTime","getByteFrequencyData","Grid","GridItem","path","App","stop","handleStreamData","loadSamples","fromFile","_this3","incoming","_this4","fromMic","analyserLoop","stopMic","App_Grid","App_GridItem","element_Spectrogram","FileList_FileList","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.b65b9417.chunk.js","sourcesContent":["const parseNumber = prop => parseFloat(prop) || 0;\n\nconst getSize = (el) => {\n  if (el === window || el === document.body) {\n    return [window.innerWidth, window.innerHeight];\n  }\n\n  let temporary = false;\n\n  if (!el.parentNode && document.body) {\n    temporary = true;\n    document.body.appendChild(el);\n  }\n\n  const rect = el.getBoundingClientRect();\n  const styles = getComputedStyle(el);\n  const height =\n    (rect.height | 0) +\n    parseNumber(styles.getPropertyValue('margin-top')) +\n    parseNumber(styles.getPropertyValue('margin-bottom'));\n  const width =\n    (rect.width | 0) +\n    parseNumber(styles.getPropertyValue('margin-left')) +\n    parseNumber(styles.getPropertyValue('margin-right'));\n\n  if (temporary && document.body) {\n    document.body.removeChild(el);\n  }\n\n  return [width, height];\n};\n\nexport default getSize;","import React, { Component } from 'react';\nimport getSize from './getSize';\n\nclass ResponsiveCanvas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            width: 0,\n            height: 0\n        };\n    }\n    componentDidMount() {\n        this.setState({ ...this.setSize() }, () => {\n            window.addEventListener('resize', this.handleResize, false);\n            this.ctx = this.canvas.getContext('2d');\n            const { ctx, canvas } = this;\n            const { width, height } = this.state;\n            this.props.canvasApp.init(ctx, canvas, width, height);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize, false);\n    }\n    handleResize = () => {\n        const { ctx, canvas } = this;\n        const { width, height } = this.state;\n        this.setState({ ...this.setSize() }, () => {\n            this.props.canvasApp.setSize(width, height)\n            // Add custom events with this.props.onResize();\n        });\n    }\n    setSize = () => {\n        const parent = this.canvas.parentElement;\n        if (!parent) return;\n        const [width, height] = getSize(parent);\n        return { width, height };\n    }\n    setRef = (el) => {\n        if (!el) return\n        const { createRef } = this.props;\n        this.canvas = el;\n        if (typeof canvasRef === 'function') {\n            createRef(el);\n        }\n    };\n    render() {\n        const scale = window.devicePixelRatio || 1;\n        const { width, height } = this.state;\n        return (\n            <canvas\n                ref={this.setRef}\n                width={width * scale}\n                height={height * scale}\n                style={{ width, height, ...this.props.style, border: '1px solid' }}\n            />\n        )\n    }\n}\n\nconst Canvas = (props) => {\n    return (\n        <ResponsiveCanvas\n            style={{ ...props.style, }}\n            canvasRef={el => { this.canvas = el }}\n            canvasApp={props.canvasApp}\n            isPlaying={props.isPlaying}\n        />\n    )\n}\n\n\nexport { Canvas };","import React, { Component } from 'react';\nimport { Canvas } from '../Canvas';\nclass Spectrogram extends Component {\n    constructor() {\n        super();\n    }\n    init(ctx, canvas, width, height) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw()\n    }\n    setSize(width, height) {\n        console.log('resizing', width, height)\n        this.canvas.width = width;\n        this.canvas.height = height;\n        cancelAnimationFrame(this.animationLoop);\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw();\n    }\n    draw(x = 0, y = 0) {\n        const { slice, ctx, canvas: { width, height }, props: { streamData, isPlaying, mic } } = this;\n        this.animationLoop = requestAnimationFrame(() => {\n            if (x > width) x = 0;\n            this.draw(x, y);\n        });\n        let sliceData = slice.data;\n        for (let i = 0; i < sliceData.length; i += 4) {\n            if (streamData) {\n                // Main\n                sliceData[i] = streamData[i]\n                sliceData[i + 1] = streamData[i + 1]\n                sliceData[i + 2] = streamData[i + 2]\n\n            } else {\n                // Standby\n                sliceData[i] = 0;\n                sliceData[i + 1] = 0;\n                sliceData[i + 2] = 0;\n            }\n        }\n        isPlaying || mic ? x++ : x = 0;\n        ctx.putImageData(slice, x, y);\n    }\n    scaleImageData(imageData, scale) {\n        let scaled = this.ctx.createImageData(imageData.width * scale, imageData.height * scale);\n        for (let row = 0; row < imageData.height; row++) {\n            for (let col = 0; col < imageData.width; col++) {\n                let sourcePixel = [\n                    imageData.data[(row * imageData.width + col) * 4 + 0],\n                    imageData.data[(row * imageData.width + col) * 4 + 1],\n                    imageData.data[(row * imageData.width + col) * 4 + 2],\n                    imageData.data[(row * imageData.width + col) * 4 + 3]\n                ];\n                for (let y = 0; y < scale; y++) {\n                    let destRow = row * scale + y;\n                    for (let x = 0; x < scale; x++) {\n                        let destCol = col * scale + x;\n                        for (let i = 0; i < 4; i++) {\n                            scaled.data[(destRow * scaled.width + destCol) * 4 + i] =\n                                sourcePixel[i];\n                        }\n                    }\n                }\n            }\n        }\n        return scaled;\n    }\n    render() {\n        return (\n            <Canvas style={{ transform: 'rotate(180deg) scaleX(-1)' }} canvasRef={el => { this.canvas = el }} canvasApp={this} isPlaying={this.props.isPlaying} />\n        )\n    }\n}\n\n\n\n\nexport { Spectrogram };","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\n\nclass Uploader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    }\n    this.reader = new FileReader();\n  }\n  handleUpload = () => {\n    const { props, reader } = this;\n    this.setState({ loading: true });\n    const el = new Audio();\n    const file = this.el.files[0];\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      el.src = \"\";\n    }\n    reader.onloadend = () => {\n      el.src = reader.result;\n      props.onUploadSuccess({ name: file.name, el });\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { state } = this;\n    return (\n      <React.Fragment>\n        <Tooltip title='upload audio'>\n          <Button\n            size='small'\n            shape='circle'\n            icon='upload'\n            loading={state.loading}\n            onClick={() => this.el.click()}\n          />\n        </Tooltip>\n        <input\n          accept='audio/*'\n          ref={el => this.el = el} type=\"file\" style={{ display: 'none' }}\n          onChange={() => this.handleUpload()}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport { Uploader }","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const Downloader = (props) => {\n    return (\n        <Tooltip title='download image'>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon='download'\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const PlaybackCtrl = (props) => {\n    return (\n        <Tooltip title={props.isPlaying ? 'pause' : 'play'}>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon={props.isPlaying ? 'pause-circle' : 'play-circle'}\n                onClick={props.handlePlayback}\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Uploader, Downloader, PlaybackCtrl, Recorder } from '../';\nimport { List, Button, Icon } from 'antd';\nimport { Spin } from 'antd';\n\nexport const FileList = (props) => {\n    const {\n        onUploadSuccess,\n        handleSelect,\n        handlePlayback,\n        handleCapture,\n        isPlaying,\n        selectedFile,\n        dataSource,\n        mic\n    } = props;\n    return (\n        <List\n            style={props.style}\n            header={\n                <div>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly', }}>\n                        <Uploader onUploadSuccess={onUploadSuccess} />\n                        <Downloader />\n                        <PlaybackCtrl\n                            disabled={!selectedFile || mic}\n                            handlePlayback={handlePlayback}\n                            isPlaying={isPlaying}\n                        />\n                        <Recorder mic={mic} isPlaying={isPlaying} handleCapture={handleCapture} />\n                        {selectedFile ? <span style={{ textAlign: 'center' }}><Icon type='sound' /> {mic ? 'Microphone' : selectedFile.name}</span> : null}\n                    </div>\n                </div>\n            }\n            bordered\n            dataSource={dataSource}\n            renderItem={file => (\n                <List.Item>\n                    <Button\n                        disabled={mic}\n                        block\n                        style={{ margin: '0 auto' }}\n                        onClick={() => handleSelect(file)}>\n                        <List.Item.Meta\n                            avatar={<img width={25} height={25} src=\"https://www.svgrepo.com/show/8210/musical-notes.svg\" />}\n                            title={file.name}\n                        />\n                    </Button>\n                </List.Item>\n            )}\n        />\n    )\n}","import { Grid } from './Grid';\nimport { GridItem } from './GridItem';\nexport const GridSystem = { Grid, GridItem };","import React from 'react';\n\nexport const Grid = (props) => {\n    const GridStyles = {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${props.cols}, 1fr)`,\n        gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n        ...props.style,\n        // gridRowGap: props.gridRowGap,\n        // gridColumnGap: props.gridColGap,\n    }\n    const { rows, cols } = props;\n    return (\n        <div className='grid' style={GridStyles}>\n            {\n                React.Children.map(props.children, (row, id) => React.cloneElement(row, { id: id + 1, rows: rows + 1, cols: cols + 1 }))\n            }\n        </div>\n    );\n}","import React from 'react';\n\nexport const GridItem = (props) => {\n    const GridItemStyles = {\n        ...props.rowStart ? { gridRowStart: props.rowStart } : { gridRowStart: props.id },\n        ...props.rowEnd ? { gridRowEnd: props.rowEnd + 1 } : null,\n        ...props.colStart ? { gridColumnStart: props.colStart } : { gridColumnStart: 1 },\n        ...props.colEnd ? { gridColumnEnd: props.colEnd + 1 } : { gridColumnEnd: props.cols },\n        ...props.style\n    }\n    return (\n        <div style={GridItemStyles}>\n            {props.children}\n        </div>\n    );\n}","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { MdMicOff } from \"react-icons/md\";\n\nclass Recorder extends Component {\n    constructor() {\n        super();\n    }\n    render() {\n        const { props } = this;\n        return (\n            <React.Fragment>\n                <Tooltip title='connect mic'>\n                    <Button\n                        disabled={props.isPlaying}\n                        style={{ display: 'flex', justifyContent: 'space-evenly', }}\n                        onClick={props.handleCapture}\n                        size='small'\n                        shape='circle'\n                        icon={!props.mic ? 'audio' : null}\n                    >{props.mic ? <MdMicOff /> : null}</Button>\n                </Tooltip>\n            </React.Fragment>\n        )\n    }\n}\n\nexport { Recorder }","/* AUDIOSTREAM\n*  API for audio playback and analysis.\n*/\n\nclass AudioStream {\n    constructor() {\n        this.microphone = {};\n        this.files = [];\n        this.play = this.play.bind(this);\n        this.getStreamData = this.getStreamData.bind(this)\n    }\n    async loadModule() {\n        const { actx } = this;\n        try {\n            await actx.audioWorklet.addModule(`${process.env.PUBLIC_URL}/worklet/bypass-processor.js`);\n            this.bypassNode = new AudioWorkletNode(actx, 'bypass-processor');\n            console.log(`loaded module `);\n            return true;\n        } catch (e) {\n            console.log(`Failed to load module`);\n            return false;\n        }\n    }\n    async checkContext() {\n        if (!this.actx) {\n            try {\n                console.log('New context instantiated')\n                this.actx = new (window.AudioContext || window.webkitAudioContext)();\n                await this.loadModule();\n            } catch (e) {\n                console.log(`Sorry, but your browser doesn't support the Web Audio API!`, e);\n            }\n        }\n    }\n    fromFile(file) {\n        this.checkContext();\n        const { actx } = this;\n        try {\n            this.analyser = actx.createAnalyser();\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            this.source = actx.createMediaElementSource(file.el);\n            const { analyser, source, dataArray } = this;\n            analyser.fftSize = 2048;\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -15;\n            analyser.connect(actx.destination);\n            source.connect(this.analyser);\n            this.files.push({ file, analyser, source, dataArray })\n        } catch (e) {\n            console.log('Failed to make stream: ', e);\n        }\n    }\n    fromMic() {\n        this.checkContext();\n        const { actx, bypassNode } = this;\n        this.microphone.analyser = actx.createAnalyser();\n        const { analyser } = this.microphone;\n        analyser.fftSize = 4096;\n        analyser.minDecibels = -120;\n        analyser.maxDecibels = -15;\n        this.microphone.dataArray = new Uint8Array(analyser.frequencyBinCount);\n        navigator.getUserMedia({ audio: true }, (stream) => {\n            this.microphone.source = actx.createMediaStreamSource(stream);\n            this.microphone.recorder = new MediaRecorder(stream);\n            this.microphone.source.connect(analyser)\n                .connect(bypassNode)\n                .connect(actx.destination);\n        }, (e) => console.log(e));\n    }\n    stopMic() {\n        this.microphone\n            .recorder\n            .stream\n            .getAudioTracks().forEach((track) => console.log(track));\n    }\n    play(index) {\n        this.actx.resume();\n        this.files[index].file.el.play();\n        this.getStreamData(index);\n    }\n    stop(index) {\n        this.files[index].file.el.pause();\n        this.files[index].file.el.currentTime = 0;\n    }\n    getStreamData(index) {\n        if (index === 'mic') {\n            this.microphone.analyser.getByteFrequencyData(this.microphone.dataArray)\n            return this.microphone.dataArray;\n        } else {\n            this.files[index].analyser.getByteFrequencyData(this.files[index].dataArray)\n            return this.files[index].dataArray;\n        }\n    }\n}\n\nexport { AudioStream }","/* APP\n*  The main page.\n*/\nimport React, { Component } from 'react';\nimport { Spectrogram, FileList, GridSystem } from './components';\nimport { AudioStream } from './AudioStream';\nconst { Grid, GridItem } = GridSystem;\nlet data = [\n  {\n    name: 'Hidden transmission',\n    path: `${process.env.PUBLIC_URL}/data/hidden_transmission.mp3`,\n  },\n  {\n    name: 'Aphex twin song',\n    path: `${process.env.PUBLIC_URL}/data/AphexTwin.mp3`,\n  }\n];\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      mic: false,\n      files: [],\n      isPlaying: false,\n    }\n    this.AudioStream = new AudioStream();\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.onUploadSuccess = this.onUploadSuccess.bind(this);\n    this.handlePlayback = this.handlePlayback.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleStreamData = this.handleStreamData.bind(this);\n    this.loadSamples = this.loadSamples.bind(this);\n    this.handleCapture = this.handleCapture.bind(this);\n  }\n  componentDidMount() {\n    this.loadSamples();\n  }\n  loadSamples() {\n    let files = data.map((file, i) => {\n      let audio = new Audio();\n      audio.src = file.path;\n      file.el = audio;\n      file.index = i;\n      this.AudioStream.fromFile(file);\n      return file;\n    });\n    this.setState({ files, selectedFile: files[0] });\n  }\n  onUploadSuccess(file) {\n    let incoming = { ...file, index: this.state.files.length };\n    let files = this.state.files.concat({ ...incoming });\n    let selectedFile = this.state.selectedFile ? this.state.selectedFile : incoming;\n    this.setState({ files, selectedFile }, () => {\n      this.AudioStream.fromFile(file);\n      this.handleSelect(incoming);\n    });\n  }\n  handleSelect(file) {\n    if (this.state.isPlaying) this.stop();\n    this.setState({ selectedFile: file, isPlaying: false });\n  }\n  handlePlayback() {\n    const { play, stop, state: { isPlaying } } = this;\n    this.setState({ isPlaying: !isPlaying }, () => {\n      if (isPlaying) {\n        stop();\n      } else {\n        play();\n      }\n    });\n  }\n  handleCapture() {\n    this.setState({ mic: !this.state.mic }, () => {\n      if(!this.state.mic) {\n        cancelAnimationFrame(this.analyserLoop)\n        this.AudioStream.stopMic();\n      } else {\n        this.AudioStream.fromMic();\n        this.handleStreamData('mic');\n      }\n   \n    });\n  }\n  play() {\n    const { AudioStream, handleStreamData, state: { selectedFile } } = this;\n    handleStreamData(selectedFile.index);\n    AudioStream.play(selectedFile.index)\n  }\n  stop() {\n    const { AudioStream, state: { selectedFile }, analyserLoop } = this;\n    cancelAnimationFrame(analyserLoop);\n    AudioStream.stop(selectedFile.index);\n    this.setState({ streamData: [] })\n  }\n  handleStreamData(index) {\n    const { AudioStream, handleStreamData } = this;\n    this.setState({ streamData: AudioStream.getStreamData(index) });\n    this.analyserLoop = requestAnimationFrame(() => handleStreamData(index));\n  }\n  render() {\n    return (\n      <Grid cols={8} rows={3}>\n        <GridItem style={{ height: '170px' }}>\n          <Spectrogram streamData={this.state.streamData} isPlaying={this.state.isPlaying} mic={this.state.mic} />\n        </GridItem>\n        <GridItem rowStart={2}>\n          <FileList\n            mic={this.state.mic}\n            selectedFile={this.state.selectedFile}\n            onUploadSuccess={this.onUploadSuccess}\n            handlePlayback={this.handlePlayback}\n            handleSelect={this.handleSelect}\n            handleCapture={this.handleCapture}\n            isPlaying={this.state.isPlaying}\n            dataSource={this.state.files}\n          />\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'audioworklet-polyfill';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}