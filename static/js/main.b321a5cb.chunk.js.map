{"version":3,"sources":["components/Canvas/getSize.js","components/Canvas/Canvas.jsx","components/Spectrogram/element.jsx","components/FileUploader/Uploader.jsx","components/FileDownloader/Downloader.jsx","components/PlaybackCtrl/PlaybackCtrl.jsx","components/FileList/FileList.jsx","components/GridSystem/index.js","components/GridSystem/Grid.jsx","components/GridSystem/GridItem.jsx","AudioStream/index.js","App.js","index.js"],"names":["parseNumber","prop","parseFloat","getSize","el","window","document","body","innerWidth","innerHeight","temporary","parentNode","appendChild","rect","getBoundingClientRect","styles","getComputedStyle","height","getPropertyValue","width","removeChild","ResponsiveCanvas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleResize","_assertThisInitialize","assertThisInitialized","_this$state","ctx","canvas","state","setState","objectSpread","setSize","props","canvasApp","parent","parentElement","_getSize","_getSize2","slicedToArray","setRef","createRef","canvasRef","_this2","addEventListener","getContext","_this2$state","init","removeEventListener","scale","devicePixelRatio","_this$state2","react_default","a","createElement","ref","style","border","Component","Canvas","Canvas_ResponsiveCanvas","Canvas_this3","isPlaying","Spectrogram","fillStyle","fillRect","slice","getImageData","draw","cancelAnimationFrame","animationLoop","x","arguments","length","undefined","y","_this$canvas","_this$props","streamData","requestAnimationFrame","sliceData","data","i","putImageData","imageData","scaled","createImageData","row","col","sourcePixel","destRow","destCol","Canvas_Canvas","transform","Uploader","handleUpload","reader","loading","Audio","file","files","readAsDataURL","src","onloadend","result","onUploadSuccess","name","FileReader","Fragment","tooltip","title","es_button","size","shape","icon","onClick","click","accept","type","display","onChange","Downloader","assign","PlaybackCtrl","handlePlayback","FileList","handleSelect","selectedFile","dataSource","list","header","justifyContent","Uploader_Uploader","PlaybackCtrl_PlaybackCtrl","disabled","Downloader_Downloader","textAlign","marginTop","bordered","renderItem","Item","block","margin","Meta","avatar","GridSystem","GridStyles","gridTemplateColumns","concat","cols","gridTemplateRows","rows","className","React","Children","map","children","id","cloneElement","GridItemStyles","rowStart","gridRowStart","rowEnd","gridRowEnd","colStart","gridColumnStart","colEnd","gridColumnEnd","AudioStream","play","bind","getStreamData","actx","console","log","AudioContext","webkitAudioContext","e","checkContext","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","source","createMediaElementSource","fftSize","minDecibels","maxDecibels","connect","destination","push","index","getByteFrequencyData","pause","currentTime","Grid","GridItem","path","process","App","stop","handleStreamData","loadSamples","audio","fromFile","_this3","incoming","analyserLoop","App_Grid","App_GridItem","element_Spectrogram","FileList_FileList","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.b321a5cb.chunk.js","sourcesContent":["const parseNumber = prop => parseFloat(prop) || 0;\n\nconst getSize = (el) => {\n  if (el === window || el === document.body) {\n    return [window.innerWidth, window.innerHeight];\n  }\n\n  let temporary = false;\n\n  if (!el.parentNode && document.body) {\n    temporary = true;\n    document.body.appendChild(el);\n  }\n\n  const rect = el.getBoundingClientRect();\n  const styles = getComputedStyle(el);\n  const height =\n    (rect.height | 0) +\n    parseNumber(styles.getPropertyValue('margin-top')) +\n    parseNumber(styles.getPropertyValue('margin-bottom'));\n  const width =\n    (rect.width | 0) +\n    parseNumber(styles.getPropertyValue('margin-left')) +\n    parseNumber(styles.getPropertyValue('margin-right'));\n\n  if (temporary && document.body) {\n    document.body.removeChild(el);\n  }\n\n  return [width, height];\n};\n\nexport default getSize;","import React, { Component } from 'react';\nimport getSize from './getSize';\n\nclass ResponsiveCanvas extends Component {\n    constructor() {\n        super();\n        this.state = {\n            width: 0,\n            height: 0\n        };\n    }\n    componentDidMount() {\n        this.setState({ ...this.setSize() }, () => {\n            window.addEventListener('resize', this.handleResize, false);\n            this.ctx = this.canvas.getContext('2d');\n            const { ctx, canvas } = this;\n            const { width, height } = this.state;\n            this.props.canvasApp.init(ctx, canvas, width, height);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize, false);\n    }\n    handleResize = () => {\n        const { ctx, canvas } = this;\n        const { width, height } = this.state;\n        this.setState({ ...this.setSize() }, () => {\n            this.props.canvasApp.setSize(width, height)\n            // Add custom events with this.props.onResize();\n        });\n    }\n    setSize = () => {\n        const parent = this.canvas.parentElement;\n        if (!parent) return;\n        const [width, height] = getSize(parent);\n        return { width, height };\n    }\n    setRef = (el) => {\n        if (!el) return\n        const { createRef } = this.props;\n        this.canvas = el;\n        if (typeof canvasRef === 'function') {\n            createRef(el);\n        }\n    };\n    render() {\n        const scale = window.devicePixelRatio || 1;\n        const { width, height } = this.state;\n        return (\n            <canvas\n                ref={this.setRef}\n                width={width * scale}\n                height={height * scale}\n                style={{ width, height, ...this.props.style, border: '1px solid' }}\n            />\n        )\n    }\n}\n\nconst Canvas = (props) => {\n    return (\n        <ResponsiveCanvas\n            style={{ ...props.style, }}\n            canvasRef={el => { this.canvas = el }}\n            canvasApp={props.canvasApp}\n            isPlaying={props.isPlaying}\n        />\n    )\n}\n\n\nexport { Canvas };","import React, { Component } from 'react';\nimport { Canvas } from '../Canvas';\n// import { Spectrogram as Sonogram } from './app';\n\n\n\nclass Spectrogram extends Component {\n    constructor() {\n        super();\n    }\n    init(ctx, canvas, width, height) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw()\n    }\n    setSize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n        cancelAnimationFrame(this.animationLoop);\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.slice = this.ctx.getImageData(0, 0, 1, this.canvas.height);\n        this.draw();\n    }\n    draw(x = 0, y = 0) {\n        const { slice, ctx, canvas: { width, height }, props: { streamData, isPlaying } } = this;\n        this.animationLoop = requestAnimationFrame(() => {\n            if (x > width) x = 0;\n            this.draw(x, y);\n        });\n        let sliceData = slice.data;\n        for (let i = 0; i < sliceData.length; i += 4) {\n            if (streamData) {\n                // Main\n                sliceData[i] = streamData[i]\n                sliceData[i + 1] = streamData[i + 1]\n                sliceData[i + 2] = streamData[i + 2]\n\n            } else {\n                // Standby\n                sliceData[i] = 0;\n                sliceData[i + 1] = 0;\n                sliceData[i + 2] = 0;\n            }\n        }\n        isPlaying ? x++ : x = 0;\n        ctx.putImageData(slice, x, y);\n    }\n    scaleImageData(imageData, scale) {\n        let scaled = this.ctx.createImageData(imageData.width * scale, imageData.height * scale);\n        for (let row = 0; row < imageData.height; row++) {\n            for (let col = 0; col < imageData.width; col++) {\n                let sourcePixel = [\n                    imageData.data[(row * imageData.width + col) * 4 + 0],\n                    imageData.data[(row * imageData.width + col) * 4 + 1],\n                    imageData.data[(row * imageData.width + col) * 4 + 2],\n                    imageData.data[(row * imageData.width + col) * 4 + 3]\n                ];\n                for (let y = 0; y < scale; y++) {\n                    let destRow = row * scale + y;\n                    for (let x = 0; x < scale; x++) {\n                        let destCol = col * scale + x;\n                        for (let i = 0; i < 4; i++) {\n                            scaled.data[(destRow * scaled.width + destCol) * 4 + i] =\n                                sourcePixel[i];\n                        }\n                    }\n                }\n            }\n        }\n        return scaled;\n    }\n    render() {\n        return (\n            <Canvas style={{ transform: 'rotate(180deg) scaleX(-1)' }} canvasRef={el => { this.canvas = el }} canvasApp={this} isPlaying={this.props.isPlaying} />\n        )\n    }\n}\n\n\n\n\nexport { Spectrogram };","\nimport React, { Component } from 'react';\nimport { Button, Tooltip } from 'antd';\n\nclass Uploader extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false\n    }\n    this.reader = new FileReader();\n  }\n  handleUpload = () => {\n    const { props, reader } = this;\n    this.setState({ loading: true });\n    const el = new Audio();\n    const file = this.el.files[0];\n    if (file) {\n      reader.readAsDataURL(file);\n    } else {\n      el.src = \"\";\n    }\n    reader.onloadend = () => {\n      el.src = reader.result;\n      props.onUploadSuccess({ name: file.name, el });\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { state } = this;\n    return (\n      <React.Fragment>\n        <Tooltip title='upload audio'>\n          <Button\n            size='small'\n            shape='circle'\n            icon='upload'\n            loading={state.loading}\n            onClick={() => this.el.click()}\n          />\n        </Tooltip>\n        <input\n          accept='audio/*'\n          ref={el => this.el = el} type=\"file\" style={{ display: 'none' }}\n          onChange={() => this.handleUpload()}\n        />\n      </React.Fragment>\n    )\n  }\n}\n\nexport { Uploader }","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const Downloader = (props) => {\n    return (\n        <Tooltip title='download image'>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon='download'\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Button, Tooltip } from 'antd';\n\nexport const PlaybackCtrl = (props) => {\n    return (\n        <Tooltip title={props.isPlaying ? 'pause' : 'play'}>\n            <Button\n                {...props}\n                size='small'\n                shape='circle'\n                icon={props.isPlaying ? 'pause-circle' : 'play-circle'}\n                onClick={props.handlePlayback}\n            />\n        </Tooltip>\n    )\n}","import React from 'react';\nimport { Uploader, Downloader, PlaybackCtrl } from '../';\nimport { List, Button, Icon } from 'antd';\nimport { Spin } from 'antd';\n\nexport const FileList = (props) => {\n    const {\n        onUploadSuccess,\n        handleSelect,\n        handlePlayback,\n        isPlaying,\n        selectedFile,\n        dataSource\n    } = props;\n    return (\n        <List\n            style={props.style}\n            header={\n                <div>\n                    <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n                        <Uploader onUploadSuccess={onUploadSuccess} />\n                        <PlaybackCtrl\n                            disabled={!selectedFile}\n                            handlePlayback={handlePlayback}\n                            isPlaying={isPlaying}\n                        />\n                        <Downloader />\n                    </div>\n                    {selectedFile ? <div style={{ textAlign: 'center', marginTop: '2%' }}><Icon type='sound' /> {selectedFile.name}</div> : null}\n                </div>\n            }\n            bordered\n            dataSource={dataSource}\n            renderItem={file => (\n                <List.Item>\n                    <Button\n                        block\n                        style={{ margin: '0 auto' }}\n                        onClick={() => handleSelect(file)}>\n                        <List.Item.Meta\n                            avatar={<img width={25} height={25} src=\"https://www.svgrepo.com/show/8210/musical-notes.svg\" />}\n                            title={file.name}\n                        />\n                    </Button>\n                </List.Item>\n            )}\n        />\n    )\n}","import { Grid } from './Grid';\nimport { GridItem } from './GridItem';\nexport const GridSystem = { Grid, GridItem };","import React from 'react';\n\nexport const Grid = (props) => {\n    const GridStyles = {\n        display: 'grid',\n        gridTemplateColumns: `repeat(${props.cols}, 1fr)`,\n        gridTemplateRows: `repeat(${props.rows}, 1fr)`,\n        ...props.style,\n        // gridRowGap: props.gridRowGap,\n        // gridColumnGap: props.gridColGap,\n    }\n    const { rows, cols } = props;\n    return (\n        <div className='grid' style={GridStyles}>\n            {\n                React.Children.map(props.children, (row, id) => React.cloneElement(row, { id: id + 1, rows: rows + 1, cols: cols + 1 }))\n            }\n        </div>\n    );\n}","import React from 'react';\n\nexport const GridItem = (props) => {\n    const GridItemStyles = {\n        ...props.rowStart ? { gridRowStart: props.rowStart } : { gridRowStart: props.id },\n        ...props.rowEnd ? { gridRowEnd: props.rowEnd + 1 } : null,\n        ...props.colStart ? { gridColumnStart: props.colStart } : { gridColumnStart: 1 },\n        ...props.colEnd ? { gridColumnEnd: props.colEnd + 1 } : { gridColumnEnd: props.cols },\n        ...props.style\n    }\n    return (\n        <div style={GridItemStyles}>\n            {props.children}\n        </div>\n    );\n}","/* AUDIOSTREAM\n*  API for audio playback and analysis.\n*/\n\nclass AudioStream {\n    constructor() {\n        this.files = [];\n        this.play = this.play.bind(this);\n        this.getStreamData = this.getStreamData.bind(this)\n    }\n    checkContext() {\n        if (!this.actx) {\n            try {\n                console.log('New context instantiated')\n                this.actx = new (window.AudioContext || window.webkitAudioContext)();\n            } catch (e) {\n                console.log(`Sorry, but your browser doesn't support the Web Audio API!`, e);\n            }\n        }\n    }\n    fromFile(file) {\n        this.checkContext();\n        const { actx } = this;\n        try {\n            this.analyser = actx.createAnalyser();\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            this.source = actx.createMediaElementSource(file.el);\n            const { analyser, source, dataArray } = this;\n            analyser.fftSize = 2048;\n            analyser.minDecibels = -110;\n            analyser.maxDecibels = -15;\n            analyser.connect(actx.destination);\n            source.connect(this.analyser);\n            this.files.push({ file, analyser, source, dataArray })\n        } catch (e) {\n            console.log('Failed to make stream: ', e);\n        }\n    }\n    play(index) {\n        this.files[index].file.el.play();\n        this.getStreamData(index);\n    }\n    getStreamData(index) {\n        this.files[index].analyser.getByteFrequencyData(this.files[index].dataArray)\n        return this.files[index].dataArray;\n    }\n    stop(index) {\n        this.files[index].file.el.pause();\n        this.files[index].file.el.currentTime = 0;\n    }\n}\n\nexport { AudioStream }","/* APP\n*  The main page.\n*/\nimport React, { Component } from 'react';\nimport { Spectrogram, FileList, GridSystem } from './components';\nimport { AudioStream } from './AudioStream';\nconst { Grid, GridItem } = GridSystem;\nlet data = [\n  {\n    name: 'Hidden transmission',\n    path: `${process.env.PUBLIC_URL}/data/hidden_transmission.mp3`,\n  },\n  {\n    name: 'Aphex twin song',\n    path: `${process.env.PUBLIC_URL}/data/AphexTwin.mp3`,\n  }\n];\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n      isPlaying: false,\n    }\n    this.AudioStream = new AudioStream();\n    this.play = this.play.bind(this);\n    this.stop = this.stop.bind(this);\n    this.onUploadSuccess = this.onUploadSuccess.bind(this);\n    this.handlePlayback = this.handlePlayback.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleStreamData = this.handleStreamData.bind(this);\n    this.loadSamples = this.loadSamples.bind(this);\n  }\n  componentDidMount() {\n    this.loadSamples();\n  }\n  loadSamples() {\n    let files = data.map((file, i) => {\n      let audio = new Audio();\n      audio.src = file.path;\n      file.el = audio;\n      file.index = i;\n      this.AudioStream.fromFile(file);\n      return file;\n    });\n    this.setState({ files, selectedFile: files[0] });\n  }\n  onUploadSuccess(file) {\n    let incoming = { ...file, index: this.state.files.length };\n    let files = this.state.files.concat({ ...incoming });\n    let selectedFile = this.state.selectedFile ? this.state.selectedFile : incoming;\n    this.setState({ files, selectedFile }, () => this.AudioStream.fromFile(file));\n  }\n  handleSelect(file) {\n    this.stop();\n    this.setState({ selectedFile: file, isPlaying: false });\n  }\n  handlePlayback() {\n    const { play, stop, state: { isPlaying } } = this;\n    this.setState({ isPlaying: !isPlaying }, () => {\n      if (isPlaying) {\n        stop();\n      } else {\n        play();\n      }\n    });\n  }\n  play() {\n    const { AudioStream, handleStreamData, state: { selectedFile } } = this;\n    handleStreamData(selectedFile.index);\n    AudioStream.play(selectedFile.index)\n  }\n  stop() {\n    const { AudioStream, state: { selectedFile }, analyserLoop } = this;\n    cancelAnimationFrame(analyserLoop);\n    AudioStream.stop(selectedFile.index);\n    this.setState({ streamData: [] })\n  }\n  handleStreamData(index) {\n    const { AudioStream, handleStreamData } = this;\n    this.setState({ streamData: AudioStream.getStreamData(index) });\n    this.analyserLoop = requestAnimationFrame(() => handleStreamData(index));\n  }\n  render() {\n    return (\n      <Grid cols={8} rows={2}>\n        <GridItem style={{ height: '50vh' }}>\n          <Spectrogram streamData={this.state.streamData} isPlaying={this.state.isPlaying} />\n        </GridItem>\n        <GridItem style={{ height: '50vh' }}>\n          <FileList\n            selectedFile={this.state.selectedFile}\n            onUploadSuccess={this.onUploadSuccess}\n            handlePlayback={this.handlePlayback}\n            handleSelect={this.handleSelect}\n            isPlaying={this.state.isPlaying}\n            dataSource={this.state.files}\n          />\n        </GridItem>\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}